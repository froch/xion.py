# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: xion/jwk/v1/audience.proto
# Protobuf Python Version: 5.28.0
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import runtime_version as _runtime_version
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
_runtime_version.ValidateProtobufRuntimeVersion(
    _runtime_version.Domain.PUBLIC,
    5,
    28,
    0,
    '',
    'xion/jwk/v1/audience.proto'
)
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1axion/jwk/v1/audience.proto\x12\x0bxion.jwk.v1\"D\n\x08\x41udience\x12\x10\n\x03\x61ud\x18\x01 \x01(\tR\x03\x61ud\x12\x10\n\x03key\x18\x02 \x01(\tR\x03key\x12\x14\n\x05\x61\x64min\x18\x03 \x01(\tR\x05\x61\x64min\"\'\n\rAudienceClaim\x12\x16\n\x06signer\x18\x01 \x01(\tR\x06signerB\x96\x01\n\x0f\x63om.xion.jwk.v1B\rAudienceProtoP\x01Z&github.com/burnt-labs/xion/x/jwk/types\xa2\x02\x03XJX\xaa\x02\x0bXion.Jwk.V1\xca\x02\x0bXion\\Jwk\\V1\xe2\x02\x17Xion\\Jwk\\V1\\GPBMetadata\xea\x02\rXion::Jwk::V1b\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'xion.jwk.v1.audience_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  _globals['DESCRIPTOR']._loaded_options = None
  _globals['DESCRIPTOR']._serialized_options = b'\n\017com.xion.jwk.v1B\rAudienceProtoP\001Z&github.com/burnt-labs/xion/x/jwk/types\242\002\003XJX\252\002\013Xion.Jwk.V1\312\002\013Xion\\Jwk\\V1\342\002\027Xion\\Jwk\\V1\\GPBMetadata\352\002\rXion::Jwk::V1'
  _globals['_AUDIENCE']._serialized_start=43
  _globals['_AUDIENCE']._serialized_end=111
  _globals['_AUDIENCECLAIM']._serialized_start=113
  _globals['_AUDIENCECLAIM']._serialized_end=152
# @@protoc_insertion_point(module_scope)
